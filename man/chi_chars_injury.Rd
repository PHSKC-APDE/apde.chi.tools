% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chi_chars_injury.R
\name{chi_chars_injury}
\alias{chi_chars_injury}
\title{Generate CHI CHARS counts for injury indicators}
\usage{
chi_chars_injury(
  ph.indicator = NA,
  ph.data = NULL,
  myinstructions = NULL,
  chars.defs = NULL,
  def = "narrow"
)
}
\arguments{
\item{ph.indicator}{A character string of length 1. The indicator key to process,
which must exist in the chars.defs data table.}

\item{ph.data}{A data.table containing the CHARS data to be processed.}

\item{myinstructions}{A data.table containing processing instructions for each indicator.
Default is the output from \code{\link{chi_generate_tro_shell}}.}

\item{chars.defs}{A data.table containing definitions for each indicator. It
should have the following columns: `indicator_name`, `indicator_key`, `intent`,
`mechanism`, `age_start`, and `age_end`.}

\item{def}{A character string indicating which injury definition to use.
Default is \code{def = 'narrow'}.}
}
\value{
A data.table containing the summarized CHARS injury hospitalization data for the
        specified indicator, stratified by the requested demographic variables.
}
\description{
Generate hospitalization counts from Comprehensive Hospital Abstract Reporting
System (CHARS) data for injury indicators including falls, poisoning,
self-harm, and other injury mechanisms for CHI. This function processes
instructions for specific indicators and summarizes CHARS data accordingly.
}
\details{
This function processes instructions for a specific indicator sequentially.

Note that injury data is only available for 2012 and later years. Unlike chi_chars_ccs(),
this function doesn't need to handle the ICD-9 to ICD-10 transition explicitly as the
mechanism and intent columns have been standardized across coding systems.
}
\examples{
\dontrun{
# Example of how to run with future_lapply for memory efficiency
library(future)
library(future.apply)

plan(multisession, workers = future::availableCores() - 1)

countsINJURY <- rbindlist(future_lapply(VectorOfIndicators, function(indicator) {
  chi_chars_injury(
    ph.indicator = indicator,
    ph.data = chars,
    myinstructions = myinstructions,
    chars.defs = chars.defs,
    def = 'narrow')
}, future.seed = TRUE))

plan(sequential)

}

}
\seealso{
\code{\link[rads]{get_data_chars}}, which provides creates ph.data

\code{\link[rads]{chars_injury_matrix_count}}, which is the engine used by this function

\code{\link{chi_generate_tro_shell}}, which creates myinstructions
}
