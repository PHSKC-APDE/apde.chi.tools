% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chi_keep_proper_ages.R
\name{chi_keep_proper_ages}
\alias{chi_keep_proper_ages}
\title{Keep data for appropriate ages only}
\usage{
chi_keep_proper_ages(ph.data = NULL)
}
\arguments{
\item{ph.data}{A data.table containing the data to be filtered. Should have the
following columns: cat1, cat1_varname, cat1_group, cat2, cat2_varname, cat2_group,
indicator_key, year, chi_age, tab -- all of the appropriate classes.}
}
\value{
A filtered data.table with only the rows where chi_age is compatible
with the age ranges implied by age groups.
}
\description{
Internal function to filter data based on age groups in cat1_group and cat2_group,
preserving only the rows where chi_age falls within the implied age ranges of
any age groups in the data.
}
\details{
When \code{cat# == 'Age'}, the function parses \code{cat#_group} labels (e.g.,
"<18", "18-24", "75+") to determine minimum and maximum ages, then filters the
data accordingly. It handles age groups in both cat1 and cat2 categories.
}
\examples{
library(data.table)

# Make test data with all combinations of categories and age
test_data <- CJ(
  cat1 = "Gender",
  cat1_varname = "chi_sex",
  cat1_group = c("Female", "Male"),
  cat2 = "Age",
  cat2_varname = "yage4",
  cat2_group = c("0-4", "5-9", "10-14"),
  chi_age = 1:20,
  unique = TRUE
)

# Add extra required columns
test_data[, `:=`(
  indicator_key = "indicator1",
  year = "2023",
  tab = "mytab",
  count = 1
)]

# Example usage
filtered_data <- chi_keep_proper_ages(test_data)
filtered_data[cat2_group == "10-14", unique(chi_age)]

}
