---
title: "ronNotes"
format: html
---

#todos

Check with team if they are applying any specific style functon in rads dev

# CHEAT SHEETS

This is heavily informed by:
https://r-pkgs.org/

## checking dev environment

usethis::proj_sitrep() - confirm that working dir, proj dir, and usethis dir all match (which they should!)



## controlling your runtime and testing

devtools::load_all() us used to load your sourcecode as a package into memory (it compiles, puts into a library, and loads to ram) (ctr+shift+L)

devtools::check() executes R CMD check, which tests if the package is valid (ctr+shft+E)

### style fuctions
styler::style_pkg() restyles an entire R package.
styler::style_dir() restyles all files in a directory.
usethis::use_tidy_style() is wrapper that applies one of the above functions depending on whether the current project is an R package or not.
styler::style_file() restyles a single file.
styler::style_text() restyles a character vector.


### bad behaviors

#### don't modify the R landscape

never use library() or require()
don't use source()

be VERY cautious with
options()
par()
setwd()
Sys.setenv()
Sys.setlocale()
set.seed() (or anything that changes the state of the random number generator)

IF you use the very cautious list, use on.exit() inside functions to return landscape user's default upon exiting the function

Some withr apporahces:
Set an R option; with_options(), local_options()
Set an environment variable; with_envvar(), local_envvar()
Change working directory; with_dir(), local_dir()
Set a graphics parameter; with_par(), local_par()


We like to use the withr package (https://withr.r-lib.org) to make temporary changes in global state, because it automatically captures the initial state and arranges the eventual restoration. You’ve already seen an example of its usage, when we explored snapshot tests:

test_that("side-by-side diffs work", {
  withr::local_options(width = 20) # <-- (°_°) look here!
  expect_snapshot(
    waldo::compare(c("X", letters), c(letters, "X"))
  )
})

We recommend including withr in Suggests, if you’re only going to use it in your tests, or in Imports, if you also use it below R/


